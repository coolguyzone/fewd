finalproject notes:

This is how I compiled the food options that appear when the page loads: First I made an array of several possible food options and another array with seven colors.  Next I made two empty arrays that will eventually contain the randomized foods and colors. Then I wrote a 'for' loop that uses math.random to randomly pick items from the food array, pushes the selected food into the random food array, and then splices it out of the original array. I did the exact same thing with the colors, so I end up with randomized versions of the original food and color arrays.

Next I have a for loop that creates seven Divs on the page, for the first div I get the text content from the first item in the randomized food array, and for the color from the first item in the random color array. For the next div I used the second item in the randomized food and color arrays, and so on until I hit seven divs.

A problem I encountered was that I wanted my food array to have a mix of specific and general food options, but that resulted in the page often providing options that were too similar, such as 'pizza' and 'italian', or 'tacos' and 'burritos' appearing in the same list. After consulting Avand, I decided to turn my array of foods from a list of strings to a list of objects with multiple properties, including category. I then added a new condition into the for loop which compiles my random food array. That condition looks for the category of the food I am adding, and checks to see if that category already exists in a new 'categories' array. If that category is already in the array, it skips that food option and goes onto the next. If the category isn't already in the array, it pushes it into the categories array so that no other food with the same category can be added to my random foods array.
